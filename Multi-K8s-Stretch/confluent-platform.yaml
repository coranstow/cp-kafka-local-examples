---
# Configmap containing the Root CA for the certificates used here
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-cp-rootca
  labels:
    app: cp-confluent-platform
data:
  cp-RootCA.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDTjCCAjYCCQC2IbQ1SjpMgTANBgkqhkiG9w0BAQsFADBpMR0wGwYDVQQDDBRl
    eGFtcGxlLmNvbmZsdWVudC5pbzEQMA4GA1UECwwHZXhhbXBsZTESMBAGA1UECgwJ
    Q09ORkxVRU5UMRUwEwYDVQQHDAxNb3VudGFpblZpZXcxCzAJBgNVBAYTAlVTMB4X
    DTIxMTAyMDAyNTk1N1oXDTIyMTAyMDAyNTk1N1owaTEdMBsGA1UEAwwUZXhhbXBs
    ZS5jb25mbHVlbnQuaW8xEDAOBgNVBAsMB2V4YW1wbGUxEjAQBgNVBAoMCUNPTkZM
    VUVOVDEVMBMGA1UEBwwMTW91bnRhaW5WaWV3MQswCQYDVQQGEwJVUzCCASIwDQYJ
    KoZIhvcNAQEBBQADggEPADCCAQoCggEBAN5+C3hHsUNwmP5b7pQ3By60j4a8ELVR
    zBi+sfOAWbgDAXiFvdX/umVYj2wCu8+Cq0JvdWT1nF2BojTB6SkXrBWius20vkyn
    bjJ68EznFuVAp2HRBN+JvIMZKzRHDmSA4gmTpIX3WRm7z/RioAuivRFooUDXBZc5
    Wx58Pp7KlY8o4I0mVZ4CoK0g0iG/LSCBC4Kf8oO9ivHsCNNCYS3ohLk6SSBS9/rY
    y/giasFZNCehvODK6W1uuf2OdckeMnnJOhBN0QkwFKfsgR+vag/EP7FUerWOIuH6
    +2RSdKSoD1wRstA9fJXkZJII62hBInAy021zPN3tEUNJ8ZZlp7/HjZUCAwEAATAN
    BgkqhkiG9w0BAQsFAAOCAQEAMfiUX6PfviVScKafdd0knXdk3Dg+NwjleIsailVc
    mlMO4vS3CFPaNKuCLNpqy18SthcyFPVJ2K3vPcyvvgNjElueOQYdp6Jt+XIhbldj
    cwPwROZV9V86D/sI5oFzy3asUaMVDI4hwpBZTgM1B7i8t10dNYoQ0gEX3K3/8yRR
    xEMxxvsgliTWU8rUoqJVUQ8GbqcJA1YYxJcir1FDvMGK7bIkc1WA0/tThRT50BZy
    Ufwr78oXe+UYAdGkFITXIFXnL94gegWLwJ/F+R7lWfdafrI7FS8kH8+qD+0tAAVE
    2jcZolaOo9dD/9Rhd/Rcdj8fBcVUd7X+6R9hw4lcoVFTXg==
    -----END CERTIFICATE-----
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-zookeeper-certificates
  labels:
    app: cp-confluent-platform
data:
  zookeeper-0.crt.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDcjCCAlqgAwIBAgIJAPWG4eigYKScMA0GCSqGSIb3DQEBCwUAMGkxHTAbBgNV
    BAMMFGV4YW1wbGUuY29uZmx1ZW50LmlvMRAwDgYDVQQLDAdleGFtcGxlMRIwEAYD
    VQQKDAlDT05GTFVFTlQxFTATBgNVBAcMDE1vdW50YWluVmlldzELMAkGA1UEBhMC
    VVMwHhcNMjExMDIwMDMwMDI2WhcNNDkwMzA2MDMwMDI2WjBVMQswCQYDVQQGEwJV
    UzELMAkGA1UECBMCQ2ExETAPBgNVBAcTCFBhbG9BbHRvMRIwEAYDVQQKEwlDT05G
    TFVFTlQxEjAQBgNVBAMMCW1UTFNfVXNlcjCCASIwDQYJKoZIhvcNAQEBBQADggEP
    ADCCAQoCggEBANKwxoPJMg1IIUTyxuU+mtptF6Zk8GgrxM9Sz9Bbzk3YFJAXigy/
    Zgtzqydw082gww5q3NN3H5ZQyHFE/s0bAgKKKdtWV7S/tjVMgxq1SS2nE2sgWzhp
    NFV+O8us9LX07gk17OQe8YmH34DYX2j7i+XGpmQqQknz7yhdgVrT0QAUI9BsyG+3
    SsYm1mxF0vFRW2TBvllHbIy81Tu4r41e068uONqMVLWy/8QIjK8xAQP9KBFlyluA
    cDV3RDOlURBqQ9c6euCXzIWqvssZB0voqdv2T7Fud4wONF1cPVvIJKFQVgRRLZ5N
    F/02OFjffxQa3d/D5Y9dScdmY0dQYDAk4hkCAwEAAaMxMC8wLQYDVR0RBCYwJIIL
    em9va2VlcGVyLTCCFXpvb2tlZXBlci0wLmNvbmZsdWVudDANBgkqhkiG9w0BAQsF
    AAOCAQEAabwoFTbA5e6XCeOZeSXVPe5XH21Qc1iFeXL1sEJ0obZfI6qetiV7/uxl
    9X8vb8bpi+ZicF9vSqssdU3tcH9obbTRZDnD5bSjtxPQrvJMXA82EV3XMx96sdpp
    YunWdujXwxlBDqZCLHS+BfM6gmut/XAetuPZMus4aPWGdZSIv+pWbeMMasCe3FN9
    ++s5wd+IZRYoEOsTKu4rqmXQC4aiMaEbxJlB3/xvx3j7v1BH97OkMuIXJOrHSZUJ
    I0Faq/68Vk30jP/8jDh2STQxgEkIWmg5lW20XkBOe4I+jyBUJOy+k+61NPaZARGB
    E7xjvHi15c8Fz5p8vXAP1y8xSBuy2g==
    -----END CERTIFICATE-----
  zookeeper-0.key.pem: |
    Bag Attributes
        friendlyName: zookeeper-0.confluent
        localKeyID: 54 69 6D 65 20 31 36 33 34 36 39 38 37 39 39 36 30 38
    Key Attributes: <No Attributes>
    -----BEGIN PRIVATE KEY-----
    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDSsMaDyTINSCFE
    8sblPprabRemZPBoK8TPUs/QW85N2BSQF4oMv2YLc6sncNPNoMMOatzTdx+WUMhx
    RP7NGwICiinbVle0v7Y1TIMatUktpxNrIFs4aTRVfjvLrPS19O4JNezkHvGJh9+A
    2F9o+4vlxqZkKkJJ8+8oXYFa09EAFCPQbMhvt0rGJtZsRdLxUVtkwb5ZR2yMvNU7
    uK+NXtOvLjjajFS1sv/ECIyvMQED/SgRZcpbgHA1d0QzpVEQakPXOnrgl8yFqr7L
    GQdL6Knb9k+xbneMDjRdXD1byCShUFYEUS2eTRf9NjhY338UGt3fw+WPXUnHZmNH
    UGAwJOIZAgMBAAECggEAAqvpKHyhnNeATH6DlR6RGhnuBdcb0UZUzYgwSGURnZ0S
    zazuvDClG5oQ3oQou1/BeWpTeH73MJG/qOgGDxW7lcqoszZKEGmp5s0ckHciAWkv
    7tjPL0zuM/NQ0MlVpQUBC67aXR4jU+ocJGcZ9pvR70zwiS6b/pIQQ0PEQyGScdzJ
    m1h7OWL4n5hZVgtsE5dZMHRTUbC+ODQfSz0xT6QJjbAwZSgBfzp8ccqz0ooveoUb
    MJ+4zWofBj5YBHeJDMCesrYEJ5YgXQnMANDBYIWch3aSwwV75rz1KdNUtOHk/ajN
    QDFSO2vKTsynxMXABuWW2Wx8UdBB8CSZAXfvxbnvzQKBgQD6ld9naY1uyjLLYG1k
    9Ww/PjOZQL1FIU9IGP8ex0d3FnHU/sQshC4kUERN8KkB5rVt56cHj9ic6iQ60o2t
    QkmgUq1t4Ld8KpgB8va0pTPKpgv3zpHRlfbawIJLnMUd52QlJeigRQt2CcGJZue4
    f6LfkJ8/NWjjcMSIlE1TR6WxhwKBgQDXPjjLWKoCoCi+N6ou07dGuVewBvYA7aIT
    pc9Eu9FfJUqwdbCLAmP+yzYJ/a5/qs8OWOfo9AkJtX4VwpPwHbWaLIh4osE3CzxQ
    N7U1m56s+TINdbtmvXN9uQp0TIkSkfA5MC1F9SEPv2eR2wLtgS3UGb7CmdqZWnjW
    DtUTLFw3XwKBgHniTjDZqX57ASvlMjCKI2W7lpNzZtxqMErsRaMt4Pfuxd2JMdhJ
    TrxBAog6h6oyEotrwtWtxPnF9WtbIKhmdrNxo4OvavANM7S2/gKt3Dw0edvF8S1V
    WSXbv0SR81rxQsfC4ZybGNEIO8fectVN1+YQTTUMgIEoR5/7KoVYcyKfAoGBAKYc
    /RPiH4LbO9Zhe1OcTSulyoitNpnMy3LCWk2/bXwyeYvpqBAADlALYG8hetRIbHe0
    IXZlL7xwdxgwDKAZLZgImmIPqXHjl+6Ir67ppPH1d61vmOtXdpQmhGzwzDCqtGxO
    RAJjhdpza2jjT0Ugls/D9raUqmIDspHw7HxZlemdAoGAB2zYlRiTowHI0B4zFMpz
    iNoOz05lShrptV9U3Qmunm4FUPn/MohsW1EWVosRaEWqFHbeSVYs1rMkZMhj3w5Q
    EmQqyywCnKDA7Kes5msc3LjTvsWKIcWrzwyZ9TBaBDqwjr67bgLYB892SmF9ttBS
    XCMhSNgRdNGngxyifg/VVfI=
    -----END PRIVATE KEY-----
  zookeeper-0.quorum.crt.pem: |
   -----BEGIN CERTIFICATE-----
   MIIDPTCCAiWgAwIBAgIJAPWG4eigYKSrMA0GCSqGSIb3DQEBCwUAMGkxHTAbBgNV
   BAMMFGV4YW1wbGUuY29uZmx1ZW50LmlvMRAwDgYDVQQLDAdleGFtcGxlMRIwEAYD
   VQQKDAlDT05GTFVFTlQxFTATBgNVBAcMDE1vdW50YWluVmlldzELMAkGA1UEBhMC
   VVMwHhcNMjExMDIwMDMwMTAxWhcNNDkwMzA2MDMwMTAxWjAgMR4wHAYDVQQDExV6
   b29rZWVwZXItMC5jb25mbHVlbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
   AoIBAQCjwh32ZCsRITik7dvrVufnZJXQp4jHEhdEnQ77JJeoBkrwUBhhBO52oqwH
   MYNwE8WbK93RiZTaDH7Rz9a/wwEnTkeXQlQ0ZnpZGNT7j5ZKbOQrYtCDGHQA8fHW
   ZUSLxyv1pcvV3Bgl6KboLHGIYIYrMbk7l/zvo1M6K9Yqmz1+94w/s9GqzXsoO8sp
   WC6TjNR4AgJvDdU/naoUDqp6hwsXRMkr4FNbKu5R5c3SMEmNWF9r6TStuFxiFXoF
   PU8Fjh1mfE56HI2DAyaf/gxrTijWDoVnnLvZUo1F7A3PiGMyC/bDWSUIKPyb02AX
   5XWMFZjUJrUdAPYpJoM2NkzvIpR9AgMBAAGjMTAvMC0GA1UdEQQmMCSCC3pvb2tl
   ZXBlci0wghV6b29rZWVwZXItMC5jb25mbHVlbnQwDQYJKoZIhvcNAQELBQADggEB
   AB+BFKeuXPKVicnTowEa7Qaczjrwj0em2G2h4tGBMqrNih4pFRJbyHUhHFFDO4JS
   pQ6qKHN73a+IJ3UuzmQBrBJW2q6IMrJCKRm5bCqZYlmJLnoPgg8QP30BTQA0mQ4X
   oO360qhuxfiGjHgQPPGh3jqL+x0SxEAOXq0adULtbKqVQKn7IwFmPuVPSP12JTeX
   PrU5JMiCfGWLFdzYW+7gB1W4Fm7Q4f+l7+VElU2gQdw5W/si2ml6++WxUWBFHati
   6RtkmJWH1TejNg3RxJ7t2YGAE7EXAr40jmrmlB0IOvytQ+uhDbLtqUsOI9Y7AOW8
   8ckIHBcnIpUIYm0QVl+5nLk=
   -----END CERTIFICATE-----
  zookeeper-0.quorum.key.pem: |
    Bag Attributes
        friendlyName: zookeeper-0.confluent
        localKeyID: 54 69 6D 65 20 31 36 33 34 36 39 38 38 36 30 32 35 32
    Key Attributes: <No Attributes>
    -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCjwh32ZCsRITik
    7dvrVufnZJXQp4jHEhdEnQ77JJeoBkrwUBhhBO52oqwHMYNwE8WbK93RiZTaDH7R
    z9a/wwEnTkeXQlQ0ZnpZGNT7j5ZKbOQrYtCDGHQA8fHWZUSLxyv1pcvV3Bgl6Kbo
    LHGIYIYrMbk7l/zvo1M6K9Yqmz1+94w/s9GqzXsoO8spWC6TjNR4AgJvDdU/naoU
    Dqp6hwsXRMkr4FNbKu5R5c3SMEmNWF9r6TStuFxiFXoFPU8Fjh1mfE56HI2DAyaf
    /gxrTijWDoVnnLvZUo1F7A3PiGMyC/bDWSUIKPyb02AX5XWMFZjUJrUdAPYpJoM2
    NkzvIpR9AgMBAAECggEATnHUrIz7XG9PlSIkMS4mVOAILDW0/bea0dFytbentmOd
    TlTv+LnGCaqPQbrkPbIa/OQclB2V4oYN0i//rUiaqtuCy+CIObnFbhzJGeCEnA5h
    lq71N3dlSnab5JoKJfM5CalsZXvTTYWPPrTbhfrHCrX9B6EdFyZj3f/Vzf8jjEgB
    CCuVF2Zw6SXJN5zLrgdroGDRVoYGQtAi2TMc/riZ2/VxUDLWAfBFDSOiznFkssg0
    qQQEF0XVgoYQ4be7qCkHCr5LbAsrPETRQ89kxwH6CDxQ2ZH5K/Tsq+Bp/jKO4LUU
    +Juj2k0TB6pslsyS2zXB7AzLoXGEEsjZ8p3xtmumAQKBgQDPBg/Tlow0Z/m3VuiC
    Qsfr0Uh5TQeaEDws3iO1jjrYfhybULjV2QOfUxnnzD5Kc8hkiH6a4L9J5Rn7JXnh
    8vKDXq+LML8Rlb4uUAGPBtZpYky9xK5R7uMxkoPiTESUsJsjv534DTi8Ke+8vc8s
    zE1AFsm2u029I4I3FIOoDF97QQKBgQDKf8eqfP6Fj0sTskqXscPmhDYrkwzDv6Ec
    2NfwY/mrjnKeX63CZAM1gmc9ojs674LGP+5VqwjrBJPfwBpXTR5Oq00tZ88Y78v+
    psbQBq+MWtWNuYMpIzi8GIuouiPAQfeN5nOoW24thUTBVXp9Edf+cG22fYN9nVbT
    CvKnVEK2PQKBgQCiZE7l2qIAOc9YUYPxKhFImdIP1Kyx3SpWx6mbMQZX7BTkgF18
    4c5FnBomCcCTBl+a/LbTJpjmjh/jMXJ6GujAw/VPad13Hc8g5QFUADkQUVuBQFa9
    TnZI3HU3fjwNprsLP7PacAShFQRJOVrZ+ShfrYBtJl/EjaYHLsBXgd0kAQKBgQC6
    LoIF3qalZfpBQcwTbP4RE746khlKYQZg336rJ0CG25HGy3GXKR1KNXt2z5JlvZEf
    dehMG9U3QB41uwp8+grDifyLosZmxxNoLy7cVUlSYrG2fLp7OEcRqf++QmZcfkp9
    zUTJpkbG06FDoLPeCmntJrG49+3NsLwDji1Ma8xqgQKBgH2VqC2RhKuNnZlmvIiY
    4exL+XAOW1iZZEBw2y2U1ENfsH3iGHVjuxM6/Z6PNGnZhEe4EVC7Mb1deNFfDk3K
    bNIjjzx5ksqyJha/F7gMSij14Jdu5wL9rTeAV+wgKOgrVUC2hKnKaoS4ft5JtKiX
    Z5bJrgHPR5/0tSfkIksX3V/b
    -----END PRIVATE KEY-----
  zookeeper-1.crt.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDcjCCAlqgAwIBAgIJAPWG4eigYKSdMA0GCSqGSIb3DQEBCwUAMGkxHTAbBgNV
    BAMMFGV4YW1wbGUuY29uZmx1ZW50LmlvMRAwDgYDVQQLDAdleGFtcGxlMRIwEAYD
    VQQKDAlDT05GTFVFTlQxFTATBgNVBAcMDE1vdW50YWluVmlldzELMAkGA1UEBhMC
    VVMwHhcNMjExMDIwMDMwMDI2WhcNNDkwMzA2MDMwMDI2WjBVMQswCQYDVQQGEwJV
    UzELMAkGA1UECBMCQ2ExETAPBgNVBAcTCFBhbG9BbHRvMRIwEAYDVQQKEwlDT05G
    TFVFTlQxEjAQBgNVBAMMCW1UTFNfVXNlcjCCASIwDQYJKoZIhvcNAQEBBQADggEP
    ADCCAQoCggEBAKwv9C3jhElN9hPEoA5OddwZG2IfVq5aqATv2X2g05f5xsrkLT9N
    iRSl7MnrI7EbiTIICbVSaHqtAB0YGpIsJCxeAM0XhEsMvP8ZxVkWwcKyvYKpVUV3
    4TfsQQUT91X86j7IYlCtGPiijiT+xnINVylrKCKQSqvB822llJh/WmZDDXBamYSI
    +Q1OKs905+Pr6sui0UsqXb/3RPzN1wSXBu4WQ9INuO/stBxvHNetxs6/EN2s86y1
    2gnP207+Mrw1+vJO+4DzAeV0ZYtg15nHs+MDzcy/oCkwXs8DBBoxwOtjxn5gsJmy
    T2f+i02Si/jhFkerBXi28VesHbMZDa9he4MCAwEAAaMxMC8wLQYDVR0RBCYwJIIL
    em9va2VlcGVyLTGCFXpvb2tlZXBlci0xLmNvbmZsdWVudDANBgkqhkiG9w0BAQsF
    AAOCAQEAmMQ4OU6Wt5RKGCXRuFM1IODGCC35fdFIYvBG2zfst6DjhaE06YZ56QCY
    1UJfw5+uu6pTLaH90v3ihlxJlWxm1hMv1jPdOGN3zuPd4hNG8d2atvK+C5BafCgW
    LD4S8J5Y4von8nXR3IKINFIpVfeIq5zmLv5LxRMBQ0vI3h3KeQGpUcICubrRYlGd
    9Y/+DYTVSffCsOvEf4hhGg50ita6z5EGwmO027FCX0y09Mb7f5BjxBeWFzBIuOno
    bJZV08OA3qbaq0Jg9jsx9wg5Ow3gEb5tphBipZF++72ls3GnKTpz1PKZscBysaVx
    8xMKUCvf9H0N6chLp4sJKhSX0e/gpw==
    -----END CERTIFICATE-----

  zookeeper-1.key.pem: |
    Bag Attributes
        friendlyName: zookeeper-1.confluent
        localKeyID: 54 69 6D 65 20 31 36 33 34 36 39 38 38 30 31 34 33 30
    Key Attributes: <No Attributes>
    -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCsL/Qt44RJTfYT
    xKAOTnXcGRtiH1auWqgE79l9oNOX+cbK5C0/TYkUpezJ6yOxG4kyCAm1Umh6rQAd
    GBqSLCQsXgDNF4RLDLz/GcVZFsHCsr2CqVVFd+E37EEFE/dV/Oo+yGJQrRj4oo4k
    /sZyDVcpaygikEqrwfNtpZSYf1pmQw1wWpmEiPkNTirPdOfj6+rLotFLKl2/90T8
    zdcElwbuFkPSDbjv7LQcbxzXrcbOvxDdrPOstdoJz9tO/jK8NfryTvuA8wHldGWL
    YNeZx7PjA83Mv6ApMF7PAwQaMcDrY8Z+YLCZsk9n/otNkov44RZHqwV4tvFXrB2z
    GQ2vYXuDAgMBAAECggEAJlaHB7Cgw7GYGM6u1ICjvV3Zuv8/TZLh1jeRNWeZtTzo
    BkTHzlB1NSO8lTjFualn4rvnbXfry2S5ocC8Kc+qPjav9vpFenBbpHEYf72RZshl
    abJKSi1m+AyibX8EkyC9Bz2Wpl/kL3gCLjqL9NkDjzVMumVmOtf0W3WCoHG6rwnf
    n3d65Fmv5Xsl8oEYUKwhNk08ABnvx3psNuTgtjJEyY+HRjzILulHZBnaD1CwEBMn
    dBF9HlKMm/v+s4fCCLT34qg91nkTpRvf8i9dZkJ3gXUsVwFXO/Hzb9L2P8rexlTt
    LwAD56mLXhF/a+sD+AKPQI0NzdyoHHWaCB7AJ4AQAQKBgQD/5IYn5IPzuyDtyHWx
    YP4O5iRKmA7xmOgUD3yATMFiTPgjxYSP4xhlgZEwiQWmf9aYtUxQdVGmOiabtNUh
    yBvRQJkrNTDFBPrmbAa2zFmwp5b7vplugW1LASiuEr2mNccC2V2F8ETZRsf3OyLn
    eUfiaXJbagHuvX0Iy1Up01aQywKBgQCsQnEspUXJ06rK0qmwlfBaK2qOU0ieF7jz
    biQDJ8hB5UCjCRigbIXhdTsl+JLNxL8S+ndahJcZK5SR2yt+syMiivicq1tSza0O
    mFi7XtXpVrYfULdZAE15YxLuZt9bh8sEstDevNc7nDcvEJGcBjiDiGQzsMTnxpMt
    paVt2uqBKQKBgQDg3Poe2Coz5b679SmnI6pdgVNm0VRgbZOS/UDUpZ5SOXzcQleI
    8XCg0ki5s87pTvFO5BIZqd6EChmfPjsEIop/SRrP4z/mAchQ76C+xbgTClIdCpJd
    jxJxlKUgwosxIZSuJkCO0GJP5GkYEjlL20GV7j91oSPtnUngjn1Z8cLiHQKBgHCi
    MSYkGvHQ+UgNXu8b20DaSp4tTrowgLqLNfjqNkMAB7eS5wtealv1L2uwkS0CjH14
    UDpboADRQh/s0w/RShP4En8+fEQ0QAffDYXWiMA99m+bc4c6b24DnglMMpfCvrif
    w3sgtws/JcYca1k9qA45TGuQFfAHI40hVn3yOouhAoGBAMqaKQfuzAaAzoSSL6v6
    y9nBvW5CVUUJw2lBBj7ZB5hMiIC2hI0I+q210NmcDzXgXpt/HHv+wV1fgzAeWNgQ
    O2UZ/4TcL499wvun6wIDUTE/W/DYD9oEfCCq9AM1BPFUSWFGJGssdoIouL+/kf4P
    PTlxxpKyJWIo9AKbAs3EPZ4I
    -----END PRIVATE KEY-----

  zookeeper-1.quorum.crt.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDPTCCAiWgAwIBAgIJAPWG4eigYKSsMA0GCSqGSIb3DQEBCwUAMGkxHTAbBgNV
    BAMMFGV4YW1wbGUuY29uZmx1ZW50LmlvMRAwDgYDVQQLDAdleGFtcGxlMRIwEAYD
    VQQKDAlDT05GTFVFTlQxFTATBgNVBAcMDE1vdW50YWluVmlldzELMAkGA1UEBhMC
    VVMwHhcNMjExMDIwMDMwMTA1WhcNNDkwMzA2MDMwMTA1WjAgMR4wHAYDVQQDExV6
    b29rZWVwZXItMS5jb25mbHVlbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQCtal/G8bQxtcRwOWyHlI/MEixbKtomRZxApYdjB+vPJL20NAPLNA3agCbz
    AzFhHh1LksSi5ned9bhh1A8d6sxUaoZCyT8s16uRU9Uq80Q/wBpzBgWqy1w4pu3Q
    LqW1hIqaO5JU4kuZZNn0reoFlhWPFn0Cq58VbjzscdX/3KSr0l/f0oXk/pCimnKZ
    AhnA1GaqubpSEdBxMfzH6ogI8D5BGM9Z8Gbyu7E8vzy71Y6Jsa7LUiL/qo/WBlqg
    sryaJVaZ3pCE9/7WfSX5KL9ZCwHpcU0GtqABbOajy0KXQIhq0DQLfGXomSX4VFuu
    EfFn5uVuqTcp7/Gk5xygcT+Xl0VpAgMBAAGjMTAvMC0GA1UdEQQmMCSCC3pvb2tl
    ZXBlci0xghV6b29rZWVwZXItMS5jb25mbHVlbnQwDQYJKoZIhvcNAQELBQADggEB
    AKf/KuGCOU5EbtSlJ1uyqUMRW+mP69hqy7/tidTlFF4q62ZKosXA30A8Bishhx+3
    Z0R2fiVH3dHMMY9QROeTOs1uorLyhjwpFTWr2oWVK4mSLttmHcMHml+qZSeN0QdO
    OJzbcIfNewfrZdTIpoBCgqrDZSTIqM00nyIh5FQbcvOGeRdBxBEnKIE5tywh4lGs
    5vpl/YW5n1epiUcP74+qSVyBr+2d+kI7ak0Dw4KhvtAlOH2F7t78MQDyiFy15KYu
    BtqgVGXz39grOxulB/dEgYdopu06UlgFXGE29zKIqlT3A+K2neSO4mXu4FHxP2pp
    De94vn7lZl2XrGygTrXPWhk=
    -----END CERTIFICATE-----

  zookeeper-1.quorum.key.pem: |
    Bag Attributes
        friendlyName: zookeeper-1.confluent
        localKeyID: 54 69 6D 65 20 31 36 33 34 36 39 38 38 36 34 34 30 32
    Key Attributes: <No Attributes>
    -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCtal/G8bQxtcRw
    OWyHlI/MEixbKtomRZxApYdjB+vPJL20NAPLNA3agCbzAzFhHh1LksSi5ned9bhh
    1A8d6sxUaoZCyT8s16uRU9Uq80Q/wBpzBgWqy1w4pu3QLqW1hIqaO5JU4kuZZNn0
    reoFlhWPFn0Cq58VbjzscdX/3KSr0l/f0oXk/pCimnKZAhnA1GaqubpSEdBxMfzH
    6ogI8D5BGM9Z8Gbyu7E8vzy71Y6Jsa7LUiL/qo/WBlqgsryaJVaZ3pCE9/7WfSX5
    KL9ZCwHpcU0GtqABbOajy0KXQIhq0DQLfGXomSX4VFuuEfFn5uVuqTcp7/Gk5xyg
    cT+Xl0VpAgMBAAECggEAGdFVcwv3FNOH7GFQPBstEWe/PM9zbPE+Iw3By0eZntxM
    dfCsg+s7CMW9hr558oiGOgMezVXchyLXEZF9sqmLRCIb3QOTKTzuqRM/EEbpaUhT
    Z76Ex3nBQBnyG+Vl/FFARVgLICIUuUCfhmMCDVTb3tKtR+F/LLSd02HbR111ErNf
    lbMi+X8lSM05J00t0z6MGqF/wFuynv3T9ThmtHaX15434zDU5T0EAVVdnH3RZrt5
    0bvNU8x8YFG6PAh3sPc7Bc8SOlS8q68wYu0xV0GI7WxBWiNNXQxG/8IXLC1Hgo4E
    SRNZ4gdgXoFkVq/KxBNjO8L2Cm2l9MOMM5PpSik9UQKBgQDaTdGWmbT9GPARv2m3
    1DoDEyQzvFiaEgeb6q4NjTqEJBUVCHiwlALo6q+Gv5Jvcrv05uw14fQorvkdjXYu
    IXVSLSy+DDHxZ6oZpdpi2vhqqm81UPvzaGD2NPglN6vJrY+DZ3+zuFPX22BPb9dj
    3yjjeJeWnlEmJWNtUmx/wcHW7QKBgQDLXEALbi4jN1GXb8U4Hd4SpQB8fLURQPRN
    1zfqQkSb2xqsI6NRJMPtVSXN6vXax2JwrxEtYeHz5WBYPMCQo0XwZ39C6ltljcnW
    Pyqr0rfh+MqolVxxImIuTNg7nkboCqPEa9klLYkDjIxIRcgecp6yuEY2YMGaImkH
    P/PG8Zr87QKBgQC1sIjcsAcbk3LTQp1pW2ABCSBbUsnnSVQ9519/deia7DEDtW5F
    gJq/Yfw+yRjGWxamKL+1xN5iMeayOvd+Q2iSwXh4oEu84IuJFymglyCkHj+6fzGD
    D3+LyuAwkZoPm71TH4QAf0yA3lvVIX+B5szwLYD04cUmW33aEfythAShrQKBgDhM
    8e44Ms3NIumqKA/BNRo0VE4iuH5uXTSvwOs6LYR4xImj1DNC2nt6d1zrD+XiDX7k
    +Px3fPbpKiNDroxcp6BHBxSfjW4wMxD9q/KmBAKrvm+t6knoGwZ2f+cBit/zEiPv
    N87zLFuvLadUqnLDiOwx2D51yyPBIxK+wd7yRNaBAoGBAJqhruFhGHakWJQC71jF
    Sw0tL53WN6RTuUEuFTPiGfb6zuJKHHEMz9NW+KiCRsPGSRB8DHxOUZmh2aJodmtw
    0H3ylqvrCqveO2/ogCVW1xLtOn9YAi5bpx4qSvXBfVae9HWXhXjvQu9HQkHmUklf
    ts3Le4lV/Jgz8DZOaNBK6cPW
    -----END PRIVATE KEY-----

  zookeeper-2.key.pem: |
    Bag Attributes
        friendlyName: zookeeper-2.confluent
        localKeyID: 54 69 6D 65 20 31 36 33 34 36 39 38 38 30 33 32 31 39
    Key Attributes: <No Attributes>
    -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCGhW8icZQ1H/2/
    M3OmVYkHmInHwP8+j2vHVAgGgdx1//5PtcKy7SPuMaJNBQBWC6r4wsB60N9Z9QQw
    rkWAPG4rCimb6CamCzKGtjjOYYvxZM304AEEJT2Ceb5PIgkmq0nx5t8QrbXw70+9
    RKh3NI/rZYhbeWAfkaLQqZ4UhvU5OpLx+iJIxU5Gw32vWF5w9NDDL2jhfd0uung4
    nx+pT2jw8iIlNLACz5kmtEaw7ZQBDsUB/Sk4uuoINQwWQXIdc7w4QYkG3tBXv4O0
    xlVK6vvinHIfPez2X7jSTDysJnw07hKaAE1iuQ4ZzrAz5iXvCEWNDVhPlF2oFdqF
    HkbGQI43AgMBAAECggEBAIQeo7NRmD3BKOhUcV7Jnac/Mvtk24wnMrT4HFW/z7Z5
    cd3557ryXBrC1uQMaHMaTJa8OG2nneZtVes2Dn7PW2icN5evn93vG3XhnNNeTSMO
    XZYHOBhJNythxP9Vr2UyUJLsrONlqU90y31Z5JgHoN6SvyUQhc8bq6yDGwaQMmM8
    bPMgW/uqJSreyZUFU0NkacXJkp2FcHfjycH+197CRWThTw49wHa5St1OuiONoNZA
    Pfnar9Z2b1byxIZ9OFu7+MK5hWFrdv/WuNI1c8VBBCvETW4MWHI+XMEG+Vm+lE9d
    ucZeT2P4XNXfbrWvygrXWkABns7T5fauvIfevFj/cdECgYEAzLr1Q+f0wi2c7VRW
    91+rlWgrHsNJHdS9HoUKqhFIxvWd97cmsEKOefk2R03BLvYwwWWcEtwWWUNAOl1X
    7DxRwIMKF+J9Ly6BUwRKbLUHaNaf4f3zHvdEPPj2Q5n1NIRb9Snj/p0i64aVGv9Z
    5Uk/Ib/CuyGbaHEaCInAL51lBh8CgYEAqDVyYVfUY9AtYgq11bXO1D/+jIA+X1Ab
    +edYPLrCF9lokanphn4QG8ZabohtwBfC0CxmE3MySBm827VBEtLJI4NJJ+0bYPK3
    euNgBkbDeAPDiox0YFXCXOOR+rTxiY9qrz3QjRPRn2oOUhHcW7bANvRkSp6FMMhq
    N+QeqlEahOkCgYEAyBqUT2MQYBqlH3Mn7XGdC9NdEhxeAsJEduginEd4kr7PP6fM
    MMtc5usmmlrtTzFiRiVCf0yOq4CH7oP9w/DRFxD9dIrzQIJ79OBkvgvSyi285+6H
    CuUz1UShr0Fz4XjdSKtBJUQBNaO9aT3cZ7dH9XywoKcgdtzVTTMWnXOBopECgYBt
    fKyA1Ax5E64WnOYSvw5rdWQYy/jNTXWISp9SmDVyFJ9OAQzx7+hIS+nc/IyDdnPl
    0KB4lIjsCWS2ldpPiEhIB1J83Ibvqczn/kwoibL90WVcL2QouGmU0MPaLiDx6xoE
    CvZOfdH6M6wym1GVmPSwUI9fSqNjR3BsBN44+iWK0QKBgEsdjrB/SPg/VHLDirLN
    FJDPCVw1JgCnlzPG/Vtx8lbdIBOmp7Km2Hq1jW7tj4oNhxAMJjDGip72CoqVuCi5
    /ykCEhNTfkKjt0DLtDybXh50Gh7mFt5KNtwi2DgdDWKd/hp7iiLyT31237fy+fFQ
    aSbRa851xVlR1pd1/U3L74Ge
    -----END PRIVATE KEY-----


  zookeeper-2.crt.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDcjCCAlqgAwIBAgIJAPWG4eigYKSeMA0GCSqGSIb3DQEBCwUAMGkxHTAbBgNV
    BAMMFGV4YW1wbGUuY29uZmx1ZW50LmlvMRAwDgYDVQQLDAdleGFtcGxlMRIwEAYD
    VQQKDAlDT05GTFVFTlQxFTATBgNVBAcMDE1vdW50YWluVmlldzELMAkGA1UEBhMC
    VVMwHhcNMjExMDIwMDMwMDI2WhcNNDkwMzA2MDMwMDI2WjBVMQswCQYDVQQGEwJV
    UzELMAkGA1UECBMCQ2ExETAPBgNVBAcTCFBhbG9BbHRvMRIwEAYDVQQKEwlDT05G
    TFVFTlQxEjAQBgNVBAMMCW1UTFNfVXNlcjCCASIwDQYJKoZIhvcNAQEBBQADggEP
    ADCCAQoCggEBAIaFbyJxlDUf/b8zc6ZViQeYicfA/z6Pa8dUCAaB3HX//k+1wrLt
    I+4xok0FAFYLqvjCwHrQ31n1BDCuRYA8bisKKZvoJqYLMoa2OM5hi/FkzfTgAQQl
    PYJ5vk8iCSarSfHm3xCttfDvT71EqHc0j+tliFt5YB+RotCpnhSG9Tk6kvH6IkjF
    TkbDfa9YXnD00MMvaOF93S66eDifH6lPaPDyIiU0sALPmSa0RrDtlAEOxQH9KTi6
    6gg1DBZBch1zvDhBiQbe0Fe/g7TGVUrq++Kcch897PZfuNJMPKwmfDTuEpoATWK5
    DhnOsDPmJe8IRY0NWE+UXagV2oUeRsZAjjcCAwEAAaMxMC8wLQYDVR0RBCYwJIIL
    em9va2VlcGVyLTKCFXpvb2tlZXBlci0yLmNvbmZsdWVudDANBgkqhkiG9w0BAQsF
    AAOCAQEAfnJXGyhkRyX/1TOF1qJ5Ph+rb1Dmg6Y1yiBkgxBYq7qb4h0qXcVQgzi4
    Lx7H1Px6FP7SymB3X7od5mJA1McEFPug5cfr36yCfd12tdEsg4dd9S+KSWoh6Bqd
    WE2DpSfMpDrBIoENLgkrPIy5KK6fQg6vquB/ghge22T9YytU50C7pP8+t5HkLf1d
    BNy3Tw+4Bc+71mNB2FxyU2BpBB7YpzZg+y3O+M6H/sWDEXkFDZK1m1PsvjxFwNIA
    WXe8FO6VqzF00eISJ/iDIUWVdP2Tq6y1IDqOAPJteoi9ZxHoiK75WeQ8Ichl0fE2
    ABKjyJkEn5egT7H/AFMPzStcobfxeA==
    -----END CERTIFICATE-----

  zookeeper-2.quorum.key.pem: |
    Bag Attributes
        friendlyName: zookeeper-2.confluent
        localKeyID: 54 69 6D 65 20 31 36 33 34 36 39 38 38 36 38 34 34 35
    Key Attributes: <No Attributes>
    -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDHTOjc3eXf9Pu8
    qNEDJ8DJTsdgdmVvshbZr9MMLXqH99jxGET5lRCenYoCcnXs2qhiAA5NlbIozqSZ
    c9in8mbb3UMEFJi/AdlNTaTJN8pciY9I7gBgsxlHS5e39cpHVoDo/O9VWQSNWCNi
    ORsyKe4uOwUU37thbGVonEAPwHVI16YtH/pJMv+A4VpGBN9Vee0svJMbGoZVXfOH
    yKdYjMCXvZzTTsZbKxzCKWmbV5hvuJNPlF5oesZgog6nbeDOYnQZ93bzeMpyyKvE
    W6YJRkPxkmsVDQnSQO6UZnSH0oou/ksm1L6MDGYvd9nZ+XLYT5mO2bPAUKZHHAVQ
    x6bIcylLAgMBAAECggEALyXysM2N5D2AkFEfoS92XClW4Wsg9BudbEI8G1Vm92Oa
    3u5u4txw4hVC4PFTFIVl8EkzGQeg7iZ0qhjN2G1wB/OANyboO8ekMLV9llysctfY
    HdiwHjBAeq1XZx2ujNHaDURJGlfEy+td846u8F8bCbTMrvN+0L1kACt2vEM7e8+d
    MSZt85KlSW+RaoXFfJJuf9tchkAwCKc7aBRQh6hVm8/7/DRrK7yFx7pDI3E/3P/Y
    nnMBe+VSz18FpwyiNlisUBS9RqVN0Ia1uBKCQvh8KzS4aDecUNZQzrWofsh77mw2
    R1hWmHA7XaQ0R/nsP1THQyBXHtM4qV1po3IzJ8dGAQKBgQD1lptuw3LlBYjtm9LC
    SGMHn5vCIYZY48fXp/Ko2pfmTo50lZKdygOIYKsloT/m31Hje9/y5UqO939IekXw
    2kErKl6WR6qymH1mCOySSE+O3B49iA8g6Q9bLUZJAb5FnZXAs06FCtIsDo/vvz4z
    0OPMTIJdRHHSYkv0f36M2vAOcQKBgQDPv++Ohw++FH7RJ5E4wJuZ9IceF3yPk4wA
    rJZyRhDm5gVJU+uXQpAse+lY4sV52VKD/+WPdd3Pgazcy+V5BNvCUZgg8gl2Vh/X
    lch3hu29NnZ++MfwsnaAj/fk6WX9YwppXml2QXHoh2svYp7ofHC2aIXuJIRZ5PoF
    tRYA7d5JewKBgQCTraH/5BXF9CMXxrjgzUiHgAnYnfI8p5Q3cS2xLelju19cackF
    i0G+k2q3MRTNDwMeCRJs7EZ+XAO1IJnIMGY5v7urIKNby+i0H6+qc0MsA99HXvbB
    8oOib0IxipPRJuazPt97jzs89PDG2ThdTkJ9SpCl5w+O1D8aYkRGDS2HcQKBgG9y
    QnuOHrbUXderxy7PvGlRkS5mYQ7QkxlFfIue5LBJEursVwTU02zZqCtjs5YTLD3d
    h/N2wl/v66CizN4n6hALH3YFAWh2+Sv4kQr12hFX5ydkJDYONp3vHYeyYWEVwV8X
    I7Ipl4arJqfL2v1SzFA+MCK5ejqTKEDpjP1Ana+DAoGBAOusTgxTHobV80nxJw+4
    tdiei3Fhm9CF3azy7K3ReCyJ7Jnar1Wx0cZF5h6tfSCy9ZbrBIwmS2biyJ3eCo7Y
    0kmTKdRF+ACaCubWakXTyjTQ8XRmzad/zWWJ3ncLWEH720IgEUP/+OL2mE1KswRT
    ojHyYsLm8OwtLqlEdA52fqct
    -----END PRIVATE KEY-----
  zookeeper-2.quorum.crt.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDPTCCAiWgAwIBAgIJAPWG4eigYKStMA0GCSqGSIb3DQEBCwUAMGkxHTAbBgNV
    BAMMFGV4YW1wbGUuY29uZmx1ZW50LmlvMRAwDgYDVQQLDAdleGFtcGxlMRIwEAYD
    VQQKDAlDT05GTFVFTlQxFTATBgNVBAcMDE1vdW50YWluVmlldzELMAkGA1UEBhMC
    VVMwHhcNMjExMDIwMDMwMTA5WhcNNDkwMzA2MDMwMTA5WjAgMR4wHAYDVQQDExV6
    b29rZWVwZXItMi5jb25mbHVlbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQDHTOjc3eXf9Pu8qNEDJ8DJTsdgdmVvshbZr9MMLXqH99jxGET5lRCenYoC
    cnXs2qhiAA5NlbIozqSZc9in8mbb3UMEFJi/AdlNTaTJN8pciY9I7gBgsxlHS5e3
    9cpHVoDo/O9VWQSNWCNiORsyKe4uOwUU37thbGVonEAPwHVI16YtH/pJMv+A4VpG
    BN9Vee0svJMbGoZVXfOHyKdYjMCXvZzTTsZbKxzCKWmbV5hvuJNPlF5oesZgog6n
    beDOYnQZ93bzeMpyyKvEW6YJRkPxkmsVDQnSQO6UZnSH0oou/ksm1L6MDGYvd9nZ
    +XLYT5mO2bPAUKZHHAVQx6bIcylLAgMBAAGjMTAvMC0GA1UdEQQmMCSCC3pvb2tl
    ZXBlci0yghV6b29rZWVwZXItMi5jb25mbHVlbnQwDQYJKoZIhvcNAQELBQADggEB
    AHov7H0lyrjf93H32piKAJKfet0ud+AU1Y/uFm9NmJXnbB5uXfyUzmg/g2h5Jhlh
    rB8ie0aseqvs5iEnWH9anGOUAyvGKBwHiLc0biy1fmLpowbL9rUYOAqZUv0QjfFH
    kadtT3GQd1Kzvx6OaaitUtK9MDa2tKhQC5MPOetGVUCIRcw8jLVOy/vWCxU+P9K9
    QJM2GCuxSaujMehdnOx8aCi7fXhN1ycxpVaBJPNZWArh7iDQTsHTAelkzvyclNQn
    Jd8+US3u8PTiGrskZZKnwHmKICrvxQH4rW05D4X+Oitt+VRBAce00/RBflerlIfT
    sXM2sApHktjaJ2nVgvY0rDU=
    -----END CERTIFICATE-----

#  zookeeper-3.key.pem: |
#  zookeeper-3.crt.pem: |
#  zookeeper-3.quorum.key.pem: |
#  zookeeper-3.quorum.crt.pem: |
#  zookeeper-4.key.pem: |
#  zookeeper-4.crt.pem: |
#  zookeeper-4.quorum.key.pem: |
#  zookeeper-4.quorum.crt.pem: |
#  zookeeper-5.key.pem: |
#  zookeeper-5.crt.pem: |
#  zookeeper-5.quorum.key.pem: |
#  zookeeper-5.quorum.crt.pem: |
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-0
  namespace: confluent
spec:
  #type: LoadBalancer
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: client
      protocol: TCP
      port: 2181
      targetPort: 2181
      #NodePort: 32181
    - name: serverport
      protocol: TCP
      port: 2888
      targetPort: 2888
      #NodePort: 32888
    - name: leaderelectionport
      protocol: TCP
      port: 3888
      targetPort: 3888
      #NodePort: 3888
  selector:
    #app: cp-zookeeper
    release: confluent
    statefulset.kubernetes.io/pod-name: confluent-cp-zookeeper-0
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-1
  namespace: confluent
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: client
      protocol: TCP
      port: 2181
      targetPort: 2181
      #NodePort: 32182
    - name: serverport
      protocol: TCP
      port: 2888
      targetPort: 2888
      #NodePort: 32889
    - name: leaderelectionport
      protocol: TCP
      port: 3888
      targetPort: 3888
      #NodePort: 33889
  selector:
    #app: cp-zookeeper
    release: confluent
    statefulset.kubernetes.io/pod-name: confluent-cp-zookeeper-1
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-2
  namespace: confluent
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: client
      protocol: TCP
      port: 2181
      targetPort: 2181
      #NodePort: 32183
    - name: serverport
      protocol: TCP
      port: 2888
      targetPort: 2888
      #NodePort: 32890
    - name: leaderelectionport
      protocol: TCP
      port: 3888
      targetPort: 3888
      #NodePort: 33890
  selector:
    #app: cp-zookeeper
    release: confluent
    statefulset.kubernetes.io/pod-name: confluent-cp-zookeeper-2
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-3
  namespace: confluent
spec:
  type: ExternalName
  externalName: zookeeper-3.confluent
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-4
  namespace: confluent
spec:
  type: ExternalName
  externalName: zookeeper-4.confluent
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-5
  namespace: confluent
spec:
  type: ExternalName
  externalName: zookeeper-5.confluent

### Below are template-generated configs that have been customised
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: confluent-cp-zookeeper
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: confluent
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: cp-zookeeper
      release: confluent
  serviceName: confluent-cp-zookeeper-headless
  podManagementPolicy: OrderedReady
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cp-zookeeper
        release: confluent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - cp-zookeeper
                  - key: "release"
                    operator: In
                    values:
                    - confluent
              topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: pem-to-keystore
        image: "confluentinc/cp-zookeeper:6.1.0"
        env:
        - name: rootca
          value: /etc/ssl/certs/confluent/cp-RootCA.pem
        - name: keystore_pkcs12
          value: /var/run/secrets/java.io/keystores/keystore.pkcs12
        - name: keystore_jks
          value: /var/run/secrets/java.io/keystores/keystore.jks
        - name: password
          value: changeit
        command: ['/bin/bash']
        args: ['-c', "openssl pkcs12 -export -inkey $keyfile -in $crtfile -out $keystore_pkcs12 -password pass:$password && keytool -importkeystore -noprompt -srckeystore $keystore_pkcs12 -srcstoretype pkcs12 -destkeystore $keystore_jks -storepass $password -srcstorepass $password"]

        volumeMounts:
        - name: confluent-cp-rootca
          mountpath: /etc/ssl/certs/confluent
        - name: keystore-volume
          mountPath: /var/run/secrets/java.io/keystores
#        - name: service-certs
#          mountPath: /var/run/secrets/kubernetes.io/services_serving_certs

      containers:
      - name: prometheus-jmx-exporter
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
        imagePullPolicy: "IfNotPresent"
        command:
        - java
        - -XX:+UnlockExperimentalVMOptions
        - -XX:+UseCGroupMemoryLimitForHeap
        - -XX:MaxRAMFraction=1
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "5556"
        - /etc/jmx-zookeeper/jmx-zookeeper-prometheus.yml
        ports:
        - containerPort: 5556
        resources:
          {}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-zookeeper
      - name: cp-zookeeper-server
        image: "confluentinc/cp-zookeeper:6.1.0"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        - containerPort: 5555
          name: jmx
        resources:
          {}
        env:
        - name : KAFKA_HEAP_OPTS
          value: "-Xms512M -Xmx512M"
        - name : KAFKA_JMX_PORT
          value: "5555"
        - name : ZOOKEEPER_TICK_TIME
          value: "2000"
        - name : ZOOKEEPER_SYNC_LIMIT
          value: "5"
        - name : ZOOKEEPER_INIT_LIMIT
          value: "10"
        - name : ZOOKEEPER_MAX_CLIENT_CNXNS
          value: "60"
        - name : ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT
          value: "3"
        - name : ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL
          value: "24"
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name : ZOOKEEPER_SERVERS
          value: "confluent-cp-zookeeper-0.confluent-cp-zookeeper-headless.confluent:2888:3888;confluent-cp-zookeeper-1.confluent-cp-zookeeper-headless.confluent:2888:3888;confluent-cp-zookeeper-2.confluent-cp-zookeeper-headless.confluent:2888:3888"
        # ZOOKEEPER_SERVER_ID is required just to pass cp-zookeeper ensure script for env check,
        # the value(metadata.mame) is not used and will be overwritten in command part
        - name: ZOOKEEPER_SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
        - "bash"
        - "-c"
        - |
          ZK_FIX_HOST_REGEX="s/${HOSTNAME}\.[^:]*:/0.0.0.0:/g"
          ZOOKEEPER_SERVER_ID=$((${HOSTNAME##*-}+1)) \
          ZOOKEEPER_SERVERS=`echo $ZOOKEEPER_SERVERS | sed -e "$ZK_FIX_HOST_REGEX"` \
          /etc/confluent/docker/run
        volumeMounts:
        - name: confluent-cp-rootca
          mountpath: /etc/ssl/certs/confluent
        - name: keystore-volume
          mountPath: /var/run/secrets/java.io/keystores
        - name: datadir
          mountPath: /var/lib/zookeeper/data
        - name: datalogdir
          mountPath: /var/lib/zookeeper/log
      volumes:
      - name: jmx-config
        configMap:
          name: confluent-cp-zookeeper-jmx-configmap
      - name: keystore-volume
        emptyDir: {}
#       - name: service-certs
#        secret:
#          secretName: service-certs
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "10Gi"
  - metadata:
      name: datalogdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "10Gi"



### Below here are the Helm Template-generated configs
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: confluent-cp-zookeeper-pdb
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: confluent
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: cp-zookeeper
      release: confluent
  maxUnavailable: 1
---
# Source: cp-helm-charts/charts/cp-kafka-connect/templates/jmx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-cp-kafka-connect-jmx-configmap
  labels:
    app: cp-kafka-connect
    chart: cp-kafka-connect-0.1.0
    release: confluent
    heritage: Helm
data:
  jmx-kafka-connect-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - kafka.connect:type=connect-worker-metrics
    - kafka.connect:type=connect-metrics,client-id=*
    - kafka.connect:type=connector-task-metrics,connector=*,task=*
    rules:
    - pattern : "kafka.connect<type=connect-worker-metrics>([^:]+):"
      name: "cp_kafka_connect_connect_worker_metrics_$1"
    - pattern : "kafka.connect<type=connect-metrics, client-id=([^:]+)><>([^:]+)"
      name: "cp_kafka_connect_connect_metrics_$1_$2"
    - pattern : "kafka.connect<type=connector-task-metrics, connector=([^:]+), task=([^:]+)><>status: ([^:]+)"
      name: "cp_kafka_connect_connect_connector_metrics"
      value: 1
      labels:
        connector: $1
        task: $2
        status: $3
---
# Source: cp-helm-charts/charts/cp-kafka-rest/templates/jmx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-cp-kafka-rest-jmx-configmap
  labels:
    app: cp-kafka-rest
    chart: cp-kafka-rest-0.1.0
    release: confluent
    heritage: Helm
data:
  jmx-kafka-rest-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - kafka.rest:type=jetty-metrics
    - kafka.rest:type=jersey-metrics
    rules:
    - pattern : 'kafka.rest<type=jetty-metrics>([^:]+):'
      name: "cp_kafka_rest_jetty_metrics_$1"
    - pattern : 'kafka.rest<type=jersey-metrics>([^:]+):'
      name: "cp_kafka_rest_jersey_metrics_$1"
---
# Source: cp-helm-charts/charts/cp-kafka/templates/jmx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-cp-kafka-jmx-configmap
  labels:
    app: cp-kafka
    chart: cp-kafka-0.1.0
    release: confluent
    heritage: Helm
data:
  jmx-kafka-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - kafka.server:type=ReplicaManager,name=*
    - kafka.controller:type=KafkaController,name=*
    - kafka.server:type=BrokerTopicMetrics,name=*
    - kafka.network:type=RequestMetrics,name=RequestsPerSec,request=*
    - kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent
    - kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=*
    - kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent
    - kafka.controller:type=ControllerStats,name=*
    - kafka.server:type=SessionExpireListener,name=*
    rules:
    - pattern : kafka.server<type=ReplicaManager, name=(.+)><>(Value|OneMinuteRate)
      name: "cp_kafka_server_replicamanager_$1"
    - pattern : kafka.controller<type=KafkaController, name=(.+)><>Value
      name: "cp_kafka_controller_kafkacontroller_$1"
    - pattern : kafka.server<type=BrokerTopicMetrics, name=(.+)><>OneMinuteRate
      name: "cp_kafka_server_brokertopicmetrics_$1"
    - pattern : kafka.network<type=RequestMetrics, name=RequestsPerSec, request=(.+)><>OneMinuteRate
      name: "cp_kafka_network_requestmetrics_requestspersec_$1"
    - pattern : kafka.network<type=SocketServer, name=NetworkProcessorAvgIdlePercent><>Value
      name: "cp_kafka_network_socketserver_networkprocessoravgidlepercent"
    - pattern : kafka.server<type=ReplicaFetcherManager, name=MaxLag, clientId=(.+)><>Value
      name: "cp_kafka_server_replicafetchermanager_maxlag_$1"
    - pattern : kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>OneMinuteRate
      name: "cp_kafka_kafkarequesthandlerpool_requesthandleravgidlepercent"
    - pattern : kafka.controller<type=ControllerStats, name=(.+)><>OneMinuteRate
      name: "cp_kafka_controller_controllerstats_$1"
    - pattern : kafka.server<type=SessionExpireListener, name=(.+)><>OneMinuteRate
      name: "cp_kafka_server_sessionexpirelistener_$1"
---
# Source: cp-helm-charts/charts/cp-ksql-server/templates/jmx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-cp-ksql-server-jmx-configmap
  labels:
    app: cp-ksql-server
    chart: cp-ksql-server-0.1.0
    release: confluent
    heritage: Helm
data:
  jmx-ksql-server-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - io.confluent.ksql.metrics:type=ksql-engine-query-stats
    rules:
    - pattern : 'io.confluent.ksql.metrics<type=ksql-engine-query-stats>([^:]+):'
      name: "cp_ksql_server_metrics_$1"
---
# Source: cp-helm-charts/charts/cp-ksql-server/templates/ksql-queries-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-cp-ksql-server-ksql-queries-configmap
  labels:
    app: cp-ksql-server
    chart: cp-ksql-server-0.1.0
    release: confluent
    heritage: Helm
data:
  queries.sql: |-
    -- From http://docs.confluent.io/current/ksql/docs/tutorials/basics-docker.html#create-a-stream-and-table

    -- Create a stream pageviews_original from the Kafka topic pageviews, specifying the value_format of DELIMITED
    CREATE STREAM pageviews_original (viewtime bigint, userid varchar, pageid varchar) WITH (kafka_topic='pageviews', value_format='DELIMITED');

    -- Create a table users_original from the Kafka topic users, specifying the value_format of JSON
    CREATE TABLE users_original (registertime BIGINT, gender VARCHAR, regionid VARCHAR, userid VARCHAR) WITH (kafka_topic='users', value_format='JSON', key = 'userid');

    -- Create a persistent query by using the CREATE STREAM keywords to precede the SELECT statement
    CREATE STREAM pageviews_enriched AS SELECT users_original.userid AS userid, pageid, regionid, gender FROM pageviews_original LEFT JOIN users_original ON pageviews_original.userid = users_original.userid;

    -- Create a new persistent query where a condition limits the streams content, using WHERE
    CREATE STREAM pageviews_female AS SELECT * FROM pageviews_enriched WHERE gender = 'FEMALE';

    -- Create a new persistent query where another condition is met, using LIKE
    CREATE STREAM pageviews_female_like_89 WITH (kafka_topic='pageviews_enriched_r8_r9') AS SELECT * FROM pageviews_female WHERE regionid LIKE '%_8' OR regionid LIKE '%_9';

    -- Create a new persistent query that counts the pageviews for each region and gender combination in a tumbling window of 30 seconds when the count is greater than one
    CREATE TABLE pageviews_regions WITH (VALUE_FORMAT='avro') AS SELECT gender, regionid , COUNT(*) AS numusers FROM pageviews_enriched WINDOW TUMBLING (size 30 second) GROUP BY gender, regionid HAVING COUNT(*) > 1;
---
# Source: cp-helm-charts/charts/cp-schema-registry/templates/jmx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-cp-schema-registry-jmx-configmap
  labels:
    app: cp-schema-registry
    chart: cp-schema-registry-0.1.0
    release: confluent
    heritage: Helm
data:
  jmx-schema-registry-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - kafka.schema.registry:type=jetty-metrics
    - kafka.schema.registry:type=master-slave-role
    - kafka.schema.registry:type=jersey-metrics
    rules:
    - pattern : 'kafka.schema.registry<type=jetty-metrics>([^:]+):'
      name: "cp_kafka_schema_registry_jetty_metrics_$1"
    - pattern : 'kafka.schema.registry<type=master-slave-role>([^:]+):'
      name: "cp_kafka_schema_registry_master_slave_role"
    - pattern : 'kafka.schema.registry<type=jersey-metrics>([^:]+):'
      name: "cp_kafka_schema_registry_jersey_metrics_$1"
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/jmx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-cp-zookeeper-jmx-configmap
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: confluent
    heritage: Helm
data:
  jmx-zookeeper-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - org.apache.ZooKeeperService:name0=ReplicatedServer_id*
    - org.apache.ZooKeeperService:name0=ReplicatedServer_id*,name1=replica.*
    - org.apache.ZooKeeperService:name0=ReplicatedServer_id*,name1=replica.*,name2=*
    - org.apache.ZooKeeperService:name0=ReplicatedServer_id*,name1=replica.*,name2=*,name3=*
    rules:
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+)><>(\\w+)"
      name: "cp_zookeeper_$2"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+)><>(\\w+)"
      name: "cp_zookeeper_$3"
      labels:
        replicaId: "$2"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+)><>(\\w+)"
      name: "cp_zookeeper_$4"
      labels:
        replicaId: "$2"
        memberType: "$3"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+), name3=(\\w+)><>(\\w+)"
      name: "cp_zookeeper_$4_$5"
      labels:
        replicaId: "$2"
        memberType: "$3"
---
# Source: cp-helm-charts/charts/cp-control-center/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-control-center
  labels:
    app: cp-control-center
    chart: cp-control-center-0.1.0
    release: confluent
    heritage: Helm
spec:
  ports:
    - name: cc-http
      port: 9021
  selector:
    app: cp-control-center
    release: confluent
---
# Source: cp-helm-charts/charts/cp-kafka-connect/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-kafka-connect
  labels:
    app: cp-kafka-connect
    chart: cp-kafka-connect-0.1.0
    release: confluent
    heritage: Helm
spec:
  ports:
    - name: kafka-connect
      port: 8083
    - name: metrics
      port: 5556
  selector:
    app: cp-kafka-connect
    release: confluent
---
# Source: cp-helm-charts/charts/cp-kafka-rest/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-kafka-rest
  labels:
    app: cp-kafka-rest
    chart: cp-kafka-rest-0.1.0
    release: confluent
    heritage: Helm
spec:
  ports:
    - name: rest-proxy
      port: 8082
    - name: metrics
      port: 5556
  selector:
    app: cp-kafka-rest
    release: confluent
---
# Source: cp-helm-charts/charts/cp-kafka/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-kafka-headless
  labels:
    app: cp-kafka
    chart: cp-kafka-0.1.0
    release: confluent
    heritage: Helm
spec:
  ports:
    - port: 9092
      name: broker
  clusterIP: None
  selector:
    app: cp-kafka
    release: confluent
---
# Source: cp-helm-charts/charts/cp-kafka/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-kafka
  labels:
    app: cp-kafka
    chart: cp-kafka-0.1.0
    release: confluent
    heritage: Helm
spec:
  ports:
    - port: 9092
      name: broker
    - port: 5556
      name: metrics
  selector:
    app: cp-kafka
    release: confluent
---
# Source: cp-helm-charts/charts/cp-ksql-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-ksql-server
  labels:
    app: cp-ksql-server
    chart: cp-ksql-server-0.1.0
    release: confluent
    heritage: Helm
spec:
  ports:
      - name: ksql-server
        port: 8088
      - name: metrics
        port: 5556
  selector:
    app: cp-ksql-server
    release: confluent
---
# Source: cp-helm-charts/charts/cp-schema-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-schema-registry
  labels:
    app: cp-schema-registry
    chart: cp-schema-registry-0.1.0
    release: confluent
    heritage: Helm
spec:
  ports:
    - name: schema-registry
      port: 8081
    - name: metrics
      port: 5556
  selector:
    app: cp-schema-registry
    release: confluent
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-zookeeper-headless
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: confluent
    heritage: Helm
spec:
  ports:
    - port: 2888
      name: server
    - port: 3888
      name: leader-election
  clusterIP: None
  selector:
    app: cp-zookeeper
    release: confluent
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: confluent-cp-zookeeper
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: confluent
    heritage: Helm
spec:
  type:
  ports:
    - port: 2181
      name: client
    - name: metrics
      port: 5556
  selector:
    app: cp-zookeeper
    release: confluent
---
# Source: cp-helm-charts/charts/cp-control-center/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: confluent-cp-control-center
  labels:
    app: cp-control-center
    chart: cp-control-center-0.1.0
    release: confluent
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-control-center
      release: confluent
  template:
    metadata:
      labels:
        app: cp-control-center
        release: confluent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      containers:
        - name: cp-control-center
          image: "confluentinc/cp-enterprise-control-center:6.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: cc-http
              containerPort: 9021
              protocol: TCP
          resources:
            {}
          env:
            - name: CONTROL_CENTER_BOOTSTRAP_SERVERS
              value: PLAINTEXT://confluent-cp-kafka-headless:9092
            - name: CONTROL_CENTER_ZOOKEEPER_CONNECT
              value:
            - name: CONTROL_CENTER_CONNECT_CLUSTER
              value: http://confluent-cp-kafka-connect:8083
            - name: CONTROL_CENTER_KSQL_URL
              value: http://confluent-cp-ksql-server:8088
            - name: CONTROL_CENTER_KSQL_ADVERTISED_URL
              value: http://confluent-cp-ksql-server:8088
            - name: CONTROL_CENTER_SCHEMA_REGISTRY_URL
              value: http://confluent-cp-schema-registry:8081
            - name: KAFKA_HEAP_OPTS
              value: "-Xms512M -Xmx512M"
            - name: "CONTROL_CENTER_REPLICATION_FACTOR"
              value: "3"
---
# Source: cp-helm-charts/charts/cp-kafka-connect/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: confluent-cp-kafka-connect
  labels:
    app: cp-kafka-connect
    chart: cp-kafka-connect-0.1.0
    release: confluent
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-kafka-connect
      release: confluent
  template:
    metadata:
      labels:
        app: cp-kafka-connect
        release: confluent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      containers:
        - name: prometheus-jmx-exporter
          image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
          imagePullPolicy: "IfNotPresent"
          command:
          - java
          - -XX:+UnlockExperimentalVMOptions
          - -XX:+UseCGroupMemoryLimitForHeap
          - -XX:MaxRAMFraction=1
          - -XshowSettings:vm
          - -jar
          - jmx_prometheus_httpserver.jar
          - "5556"
          - /etc/jmx-kafka-connect/jmx-kafka-connect-prometheus.yml
          ports:
          - containerPort: 5556
          resources:
            {}
          volumeMounts:
          - name: jmx-config
            mountPath: /etc/jmx-kafka-connect
        - name: cp-kafka-connect-server
          image: "confluentinc/cp-kafka-connect:6.1.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: kafka-connect
              containerPort: 8083
              protocol: TCP
            - containerPort: 5555
              name: jmx
          resources:
            {}
          env:
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: PLAINTEXT://confluent-cp-kafka-headless:9092
            - name: CONNECT_GROUP_ID
              value: confluent
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: confluent-cp-kafka-connect-config
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: confluent-cp-kafka-connect-offset
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: confluent-cp-kafka-connect-status
            - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
              value: http://confluent-cp-schema-registry:8081
            - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
              value: http://confluent-cp-schema-registry:8081
            - name: KAFKA_HEAP_OPTS
              value: "-Xms512M -Xmx512M"
            - name: "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR"
              value: "3"
            - name: "CONNECT_INTERNAL_KEY_CONVERTER"
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: "CONNECT_INTERNAL_VALUE_CONVERTER"
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: "CONNECT_KEY_CONVERTER"
              value: "io.confluent.connect.avro.AvroConverter"
            - name: "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE"
              value: "false"
            - name: "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR"
              value: "3"
            - name: "CONNECT_PLUGIN_PATH"
              value: "/usr/share/java,/usr/share/confluent-hub-components"
            - name: "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR"
              value: "3"
            - name: "CONNECT_VALUE_CONVERTER"
              value: "io.confluent.connect.avro.AvroConverter"
            - name: "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE"
              value: "false"
            - name: KAFKA_JMX_PORT
              value: "5555"
      volumes:
      - name: jmx-config
        configMap:
          name: confluent-cp-kafka-connect-jmx-configmap
---
# Source: cp-helm-charts/charts/cp-kafka-rest/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: confluent-cp-kafka-rest
  labels:
    app: cp-kafka-rest
    chart: cp-kafka-rest-0.1.0
    release: confluent
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-kafka-rest
      release: confluent
  template:
    metadata:
      labels:
        app: cp-kafka-rest
        release: confluent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      containers:
        - name: prometheus-jmx-exporter
          image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
          imagePullPolicy: "IfNotPresent"
          command:
          - java
          - -XX:+UnlockExperimentalVMOptions
          - -XX:+UseCGroupMemoryLimitForHeap
          - -XX:MaxRAMFraction=1
          - -XshowSettings:vm
          - -jar
          - jmx_prometheus_httpserver.jar
          - "5556"
          - /etc/jmx-kafka-rest/jmx-kafka-rest-prometheus.yml
          ports:
          - containerPort: 5556
          resources:
            {}
          volumeMounts:
          - name: jmx-config
            mountPath: /etc/jmx-kafka-rest
        - name: cp-kafka-rest-server
          image: "confluentinc/cp-kafka-rest:6.1.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: rest-proxy
              containerPort: 8082
              protocol: TCP
            - containerPort: 5555
              name: jmx
          resources:
            {}
          env:
          - name: KAFKA_REST_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KAFKA_REST_BOOTSTRAP_SERVERS
            value: PLAINTEXT://confluent-cp-kafka-headless:9092
          - name: KAFKA_REST_SCHEMA_REGISTRY_URL
            value: http://confluent-cp-schema-registry:8081
          - name: KAFKAREST_HEAP_OPTS
            value: "-Xms512M -Xmx512M"
          - name: JMX_PORT
            value: "5555"
      volumes:
      - name: jmx-config
        configMap:
          name: confluent-cp-kafka-rest-jmx-configmap
---
# Source: cp-helm-charts/charts/cp-ksql-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: confluent-cp-ksql-server
  labels:
    app: cp-ksql-server
    chart: cp-ksql-server-0.1.0
    release: confluent
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-ksql-server
      release: confluent
  template:
    metadata:
      labels:
        app: cp-ksql-server
        release: confluent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      containers:
        - name: prometheus-jmx-exporter
          image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
          imagePullPolicy: "IfNotPresent"
          command:
          - java
          - -XX:+UnlockExperimentalVMOptions
          - -XX:+UseCGroupMemoryLimitForHeap
          - -XX:MaxRAMFraction=1
          - -XshowSettings:vm
          - -jar
          - jmx_prometheus_httpserver.jar
          - "5556"
          - /etc/jmx-ksql-server/jmx-ksql-server-prometheus.yml
          ports:
          - containerPort: 5556
          resources:
            {}
          volumeMounts:
          - name: jmx-config
            mountPath: /etc/jmx-ksql-server
        - name: cp-ksql-server
          image: "confluentinc/cp-ksqldb-server:6.1.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: server
              containerPort: 8088
              protocol: TCP
            - containerPort: 5555
              name: jmx
          resources:
            {}
          volumeMounts:
          env:
          - name: KSQL_BOOTSTRAP_SERVERS
            value: PLAINTEXT://confluent-cp-kafka-headless:9092
          - name: KSQL_KSQL_SERVICE_ID
            value: confluent
          - name: KSQL_KSQL_SCHEMA_REGISTRY_URL
            value: http://confluent-cp-schema-registry:8081
          - name: KSQL_HEAP_OPTS
            value: "-Xms512M -Xmx512M"
          - name: KSQL_LISTENERS
            value: http://0.0.0.0:8088
          - name: JMX_PORT
            value: "5555"
      volumes:
      - name: jmx-config
        configMap:
          name: confluent-cp-ksql-server-jmx-configmap
---
# Source: cp-helm-charts/charts/cp-schema-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: confluent-cp-schema-registry
  labels:
    app: cp-schema-registry
    chart: cp-schema-registry-0.1.0
    release: confluent
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-schema-registry
      release: confluent
  template:
    metadata:
      labels:
        app: cp-schema-registry
        release: confluent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      containers:
        - name: prometheus-jmx-exporter
          image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
          imagePullPolicy: "IfNotPresent"
          command:
          - java
          - -XX:+UnlockExperimentalVMOptions
          - -XX:+UseCGroupMemoryLimitForHeap
          - -XX:MaxRAMFraction=1
          - -XshowSettings:vm
          - -jar
          - jmx_prometheus_httpserver.jar
          - "5556"
          - /etc/jmx-schema-registry/jmx-schema-registry-prometheus.yml
          ports:
          - containerPort: 5556
          resources:
            {}
          volumeMounts:
          - name: jmx-config
            mountPath: /etc/jmx-schema-registry
        - name: cp-schema-registry-server
          image: "confluentinc/cp-schema-registry:6.1.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: schema-registry
              containerPort: 8081
              protocol: TCP
            - containerPort: 5555
              name: jmx
          resources:
            {}
          env:
          - name: SCHEMA_REGISTRY_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SCHEMA_REGISTRY_LISTENERS
            value: http://0.0.0.0:8081
          - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
            value: PLAINTEXT://confluent-cp-kafka-headless:9092
          - name: SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID
            value: confluent
          - name: SCHEMA_REGISTRY_MASTER_ELIGIBILITY
            value: "true"
          - name: SCHEMA_REGISTRY_HEAP_OPTS
            value: "-Xms512M -Xmx512M"

          - name: JMX_PORT
            value: "5555"
      volumes:
      - name: jmx-config
        configMap:
          name: confluent-cp-schema-registry-jmx-configmap
---
# Source: cp-helm-charts/charts/cp-kafka/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: confluent-cp-kafka
  labels:
    app: cp-kafka
    chart: cp-kafka-0.1.0
    release: confluent
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: cp-kafka
      release: confluent
  serviceName: confluent-cp-kafka-headless
  podManagementPolicy: OrderedReady
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cp-kafka
        release: confluent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - cp-kafka
                  - key: "release"
                    operator: In
                    values:
                    - confluent
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: prometheus-jmx-exporter
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
        imagePullPolicy: "IfNotPresent"
        command:
        - java
        - -XX:+UnlockExperimentalVMOptions
        - -XX:+UseCGroupMemoryLimitForHeap
        - -XX:MaxRAMFraction=1
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "5556"
        - /etc/jmx-kafka/jmx-kafka-prometheus.yml
        ports:
        - containerPort: 5556
        resources:
          {}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-kafka
      - name: cp-kafka-broker
        image: "confluentinc/cp-enterprise-kafka:6.1.0"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 5555
          name: jmx
        resources:
          {}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_HEAP_OPTS
          value: -Xms512M -Xmx512M
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "confluent-cp-zookeeper-headless:2181"
        - name: KAFKA_LOG_DIRS
          value: "/opt/kafka/data-0/logs"
        - name: KAFKA_METRIC_REPORTERS
          value: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
        - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
          value: "PLAINTEXT://confluent-cp-kafka-headless:9092"
        - name: "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP"
          value: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
        - name: "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR"
          value: "3"
        - name: KAFKA_JMX_PORT
          value: "5555"
        # This is required because the Downward API does not yet support identification of
        # pod numbering in statefulsets. Thus, we are required to specify a command which
        # allows us to extract the pod ID for usage as the Kafka Broker ID.
        # See: https://github.com/kubernetes/kubernetes/issues/31218
        command:
        - sh
        - -exc
        - |
          export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.confluent-cp-kafka-headless.${POD_NAMESPACE}:9092,EXTERNAL://${HOST_IP}:$((31090 + ${KAFKA_BROKER_ID})) && \
          exec /etc/confluent/docker/run
        volumeMounts:
          - name: datadir-0
            mountPath: /opt/kafka/data-0
      volumes:
      - name: jmx-config
        configMap:
          name: confluent-cp-kafka-jmx-configmap
  volumeClaimTemplates:
  - metadata:
      name: datadir-0
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "5Gi"
---
# Source: cp-helm-charts/charts/cp-kafka/templates/tests/canary-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "confluent-canary"
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  containers:
  - name: confluent-canary
    image: "confluentinc/cp-enterprise-kafka:6.1.0"
    imagePullPolicy: "IfNotPresent"
    command:
    - sh
    - -c
    - |
      # Delete the topic if it exists
      kafka-topics --zookeeper confluent-cp-zookeeper-headless:2181 --topic confluent-cp-kafka-canary-topic --delete --if-exists
      # Create the topic
      kafka-topics --zookeeper confluent-cp-zookeeper-headless:2181 --topic confluent-cp-kafka-canary-topic --create --partitions 1 --replication-factor 1 --if-not-exists && \
      # Create a message
      MESSAGE="`date -u`" && \
      # Produce a test message to the topic
      echo "$MESSAGE" | kafka-console-producer --broker-list confluent-cp-kafka:9092 --topic confluent-cp-kafka-canary-topic && \
      # Consume a test message from the topic
      kafka-console-consumer --bootstrap-server confluent-cp-kafka-headless:9092 --topic confluent-cp-kafka-canary-topic --from-beginning --max-messages 1 --timeout-ms 30000 | grep "$MESSAGE"
  restartPolicy: Never
